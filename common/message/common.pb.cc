// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* MsgObjConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDropBoxConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDropBoxConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntPair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntPair_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHeroData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHeroData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTaskConditionInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTaskConditionInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTaskConfigInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTaskConfigInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShopConfigInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShopConfigInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgChapterConfigInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgChapterConfigInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgGoldShopConfigInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgGoldShopConfigInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SubType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TaskType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2eproto() {
  protobuf_AddDesc_common_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common.proto");
  GOOGLE_CHECK(file != NULL);
  MsgObjConfig_descriptor_ = file->message_type(0);
  static const int MsgObjConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjConfig, id_),
  };
  MsgObjConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgObjConfig_descriptor_,
      MsgObjConfig::default_instance_,
      MsgObjConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgObjConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjConfig, _internal_metadata_),
      -1);
  MsgDropBoxConfig_descriptor_ = file->message_type(1);
  static const int MsgDropBoxConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropBoxConfig, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropBoxConfig, base_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropBoxConfig, random_gold_),
  };
  MsgDropBoxConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgDropBoxConfig_descriptor_,
      MsgDropBoxConfig::default_instance_,
      MsgDropBoxConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropBoxConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgDropBoxConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropBoxConfig, _internal_metadata_),
      -1);
  MsgIntPair_descriptor_ = file->message_type(2);
  static const int MsgIntPair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntPair, number_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntPair, number_2_),
  };
  MsgIntPair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgIntPair_descriptor_,
      MsgIntPair::default_instance_,
      MsgIntPair_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntPair, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgIntPair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntPair, _internal_metadata_),
      -1);
  MsgHeroData_descriptor_ = file->message_type(3);
  static const int MsgHeroData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroData, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroData, records_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroData, heroes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroData, tasks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroData, current_hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroData, complete_task_count_),
  };
  MsgHeroData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgHeroData_descriptor_,
      MsgHeroData::default_instance_,
      MsgHeroData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroData, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgHeroData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroData, _internal_metadata_),
      -1);
  MsgTaskConditionInfo_descriptor_ = file->message_type(4);
  static const int MsgTaskConditionInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConditionInfo, tasktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConditionInfo, argument_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConditionInfo, argument_2_),
  };
  MsgTaskConditionInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgTaskConditionInfo_descriptor_,
      MsgTaskConditionInfo::default_instance_,
      MsgTaskConditionInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConditionInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgTaskConditionInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConditionInfo, _internal_metadata_),
      -1);
  MsgTaskConfigInfo_descriptor_ = file->message_type(5);
  static const int MsgTaskConfigInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConfigInfo, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConfigInfo, task_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConfigInfo, require_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConfigInfo, require_unlock_chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConfigInfo, require_unlock_section_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConfigInfo, require_unlock_complete_task_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConfigInfo, gift_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConfigInfo, describe_),
  };
  MsgTaskConfigInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgTaskConfigInfo_descriptor_,
      MsgTaskConfigInfo::default_instance_,
      MsgTaskConfigInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConfigInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgTaskConfigInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskConfigInfo, _internal_metadata_),
      -1);
  MsgShopConfigInfo_descriptor_ = file->message_type(6);
  static const int MsgShopConfigInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShopConfigInfo, grid_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShopConfigInfo, hero_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShopConfigInfo, require_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShopConfigInfo, cheape_gold_),
  };
  MsgShopConfigInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgShopConfigInfo_descriptor_,
      MsgShopConfigInfo::default_instance_,
      MsgShopConfigInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShopConfigInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgShopConfigInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShopConfigInfo, _internal_metadata_),
      -1);
  MsgTaskInfo_descriptor_ = file->message_type(7);
  static const int MsgTaskInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskInfo, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskInfo, argument_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskInfo, usetime_),
  };
  MsgTaskInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgTaskInfo_descriptor_,
      MsgTaskInfo::default_instance_,
      MsgTaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgTaskInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTaskInfo, _internal_metadata_),
      -1);
  MsgChapterConfigInfo_descriptor_ = file->message_type(8);
  static const int MsgChapterConfigInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChapterConfigInfo, chapter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChapterConfigInfo, required_chapter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChapterConfigInfo, required_section_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChapterConfigInfo, required_task_complete_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChapterConfigInfo, require_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChapterConfigInfo, max_section_count_),
  };
  MsgChapterConfigInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgChapterConfigInfo_descriptor_,
      MsgChapterConfigInfo::default_instance_,
      MsgChapterConfigInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChapterConfigInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgChapterConfigInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChapterConfigInfo, _internal_metadata_),
      -1);
  MsgGoldShopConfigInfo_descriptor_ = file->message_type(9);
  static const int MsgGoldShopConfigInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGoldShopConfigInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGoldShopConfigInfo, resource_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGoldShopConfigInfo, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGoldShopConfigInfo, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGoldShopConfigInfo, describe_),
  };
  MsgGoldShopConfigInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgGoldShopConfigInfo_descriptor_,
      MsgGoldShopConfigInfo::default_instance_,
      MsgGoldShopConfigInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGoldShopConfigInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgGoldShopConfigInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGoldShopConfigInfo, _internal_metadata_),
      -1);
  SubType_descriptor_ = file->enum_type(0);
  TaskType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgObjConfig_descriptor_, &MsgObjConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgDropBoxConfig_descriptor_, &MsgDropBoxConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgIntPair_descriptor_, &MsgIntPair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgHeroData_descriptor_, &MsgHeroData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgTaskConditionInfo_descriptor_, &MsgTaskConditionInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgTaskConfigInfo_descriptor_, &MsgTaskConfigInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgShopConfigInfo_descriptor_, &MsgShopConfigInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgTaskInfo_descriptor_, &MsgTaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgChapterConfigInfo_descriptor_, &MsgChapterConfigInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgGoldShopConfigInfo_descriptor_, &MsgGoldShopConfigInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2eproto() {
  delete MsgObjConfig::default_instance_;
  delete MsgObjConfig_reflection_;
  delete MsgDropBoxConfig::default_instance_;
  delete MsgDropBoxConfig_reflection_;
  delete MsgIntPair::default_instance_;
  delete MsgIntPair_reflection_;
  delete MsgHeroData::default_instance_;
  delete MsgHeroData_reflection_;
  delete MsgTaskConditionInfo::default_instance_;
  delete MsgTaskConditionInfo_reflection_;
  delete MsgTaskConfigInfo::default_instance_;
  delete MsgTaskConfigInfo_reflection_;
  delete MsgShopConfigInfo::default_instance_;
  delete MsgShopConfigInfo_reflection_;
  delete MsgTaskInfo::default_instance_;
  delete MsgTaskInfo_reflection_;
  delete MsgChapterConfigInfo::default_instance_;
  delete MsgChapterConfigInfo_reflection_;
  delete MsgGoldShopConfigInfo::default_instance_;
  delete MsgGoldShopConfigInfo_reflection_;
}

void protobuf_AddDesc_common_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014common.proto\022\007message\"C\n\014MsgObjConfig\022"
    "\'\n\004type\030\001 \002(\0162\020.message.SubType:\007DEFAULT"
    "\022\n\n\002id\030\002 \002(\005\"^\n\020MsgDropBoxConfig\022\"\n\003obj\030"
    "\001 \002(\0132\025.message.MsgObjConfig\022\021\n\tbase_gol"
    "d\030\002 \002(\005\022\023\n\013random_gold\030\003 \002(\005\"0\n\nMsgIntPa"
    "ir\022\020\n\010number_1\030\001 \002(\005\022\020\n\010number_2\030\002 \002(\005\"\267"
    "\001\n\013MsgHeroData\022\014\n\004name\030\001 \002(\t\022\014\n\004gold\030\002 \002"
    "(\005\022$\n\007records\030\003 \003(\0132\023.message.MsgIntPair"
    "\022\016\n\006heroes\030\004 \003(\010\022#\n\005tasks\030\005 \003(\0132\024.messag"
    "e.MsgTaskInfo\022\024\n\014current_hero\030\006 \002(\005\022\033\n\023c"
    "omplete_task_count\030\007 \002(\005\"r\n\024MsgTaskCondi"
    "tionInfo\0222\n\010taskType\030\001 \002(\0162\021.message.Tas"
    "kType:\rTaskType_NULL\022\022\n\nargument_1\030\002 \002(\005"
    "\022\022\n\nargument_2\030\003 \002(\005\"\201\002\n\021MsgTaskConfigIn"
    "fo\022\016\n\006taskID\030\001 \002(\005\0225\n\016task_condition\030\002 \003"
    "(\0132\035.message.MsgTaskConditionInfo\022\024\n\014req"
    "uire_time\030\003 \002(\005\022\036\n\026require_unlock_chapte"
    "r\030\004 \002(\005\022\036\n\026require_unlock_section\030\005 \002(\005\022"
    "*\n\"require_unlock_complete_task_count\030\006 "
    "\002(\005\022\021\n\tgift_gold\030\007 \002(\005\022\020\n\010describe\030\010 \002(\t"
    "\"`\n\021MsgShopConfigInfo\022\017\n\007grid_id\030\001 \002(\005\022\017"
    "\n\007hero_id\030\002 \002(\005\022\024\n\014require_gold\030\003 \002(\005\022\023\n"
    "\013cheape_gold\030\004 \002(\005\"B\n\013MsgTaskInfo\022\016\n\006Tas"
    "kID\030\001 \002(\005\022\022\n\nargument_1\030\002 \002(\005\022\017\n\007useTime"
    "\030\003 \002(\005\"\273\001\n\024MsgChapterConfigInfo\022\022\n\nchapt"
    "er_id\030\001 \002(\005\022\033\n\023required_chapter_id\030\002 \002(\005"
    "\022\033\n\023required_section_id\030\003 \002(\005\022$\n\034require"
    "d_task_complete_count\030\004 \002(\005\022\024\n\014require_g"
    "old\030\005 \002(\005\022\031\n\021max_section_count\030\006 \002(\005\"g\n\025"
    "MsgGoldShopConfigInfo\022\n\n\002id\030\001 \002(\005\022\023\n\013res"
    "ource_id\030\002 \002(\005\022\014\n\004gold\030\003 \002(\005\022\r\n\005money\030\004 "
    "\002(\002\022\020\n\010describe\030\005 \002(\t*4\n\007SubType\022\013\n\007DEFA"
    "ULT\020\000\022\013\n\007MONSTER\020\001\022\017\n\013INTERACTIVE\020\002*\340\001\n\010"
    "TaskType\022\021\n\rTaskType_NULL\020\000\022\030\n\024TaskType_"
    "KillMonster\020\001\022\025\n\021TaskType_PassGame\020\002\022\024\n\020"
    "TaskType_UnKnown\020\003\022\027\n\023TaskType_LimitLeve"
    "l\020\004\022\030\n\024TaskType_LimitRevive\020\005\022\"\n\036TaskTyp"
    "e_LimitTime_KillMonster\020\006\022#\n\037TaskType_Ac"
    "cumulate_KillMonster\020\007", 1542);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
  MsgObjConfig::default_instance_ = new MsgObjConfig();
  MsgDropBoxConfig::default_instance_ = new MsgDropBoxConfig();
  MsgIntPair::default_instance_ = new MsgIntPair();
  MsgHeroData::default_instance_ = new MsgHeroData();
  MsgTaskConditionInfo::default_instance_ = new MsgTaskConditionInfo();
  MsgTaskConfigInfo::default_instance_ = new MsgTaskConfigInfo();
  MsgShopConfigInfo::default_instance_ = new MsgShopConfigInfo();
  MsgTaskInfo::default_instance_ = new MsgTaskInfo();
  MsgChapterConfigInfo::default_instance_ = new MsgChapterConfigInfo();
  MsgGoldShopConfigInfo::default_instance_ = new MsgGoldShopConfigInfo();
  MsgObjConfig::default_instance_->InitAsDefaultInstance();
  MsgDropBoxConfig::default_instance_->InitAsDefaultInstance();
  MsgIntPair::default_instance_->InitAsDefaultInstance();
  MsgHeroData::default_instance_->InitAsDefaultInstance();
  MsgTaskConditionInfo::default_instance_->InitAsDefaultInstance();
  MsgTaskConfigInfo::default_instance_->InitAsDefaultInstance();
  MsgShopConfigInfo::default_instance_->InitAsDefaultInstance();
  MsgTaskInfo::default_instance_->InitAsDefaultInstance();
  MsgChapterConfigInfo::default_instance_->InitAsDefaultInstance();
  MsgGoldShopConfigInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2eproto {
  StaticDescriptorInitializer_common_2eproto() {
    protobuf_AddDesc_common_2eproto();
  }
} static_descriptor_initializer_common_2eproto_;
const ::google::protobuf::EnumDescriptor* SubType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubType_descriptor_;
}
bool SubType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TaskType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskType_descriptor_;
}
bool TaskType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MsgObjConfig::kTypeFieldNumber;
const int MsgObjConfig::kIdFieldNumber;
#endif  // !_MSC_VER

MsgObjConfig::MsgObjConfig()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgObjConfig)
}

void MsgObjConfig::InitAsDefaultInstance() {
}

MsgObjConfig::MsgObjConfig(const MsgObjConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgObjConfig)
}

void MsgObjConfig::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjConfig::~MsgObjConfig() {
  // @@protoc_insertion_point(destructor:message.MsgObjConfig)
  SharedDtor();
}

void MsgObjConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgObjConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgObjConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjConfig_descriptor_;
}

const MsgObjConfig& MsgObjConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgObjConfig* MsgObjConfig::default_instance_ = NULL;

MsgObjConfig* MsgObjConfig::New(::google::protobuf::Arena* arena) const {
  MsgObjConfig* n = new MsgObjConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgObjConfig::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgObjConfig*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgObjConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgObjConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.SubType type = 1 [default = DEFAULT];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::SubType_IsValid(value)) {
            set_type(static_cast< ::message::SubType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // required int32 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgObjConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgObjConfig)
  return false;
#undef DO_
}

void MsgObjConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgObjConfig)
  // required .message.SubType type = 1 [default = DEFAULT];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgObjConfig)
}

::google::protobuf::uint8* MsgObjConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgObjConfig)
  // required .message.SubType type = 1 [default = DEFAULT];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgObjConfig)
  return target;
}

int MsgObjConfig::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_type()) {
    // required .message.SubType type = 1 [default = DEFAULT];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_id()) {
    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
int MsgObjConfig::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message.SubType type = 1 [default = DEFAULT];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgObjConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjConfig::MergeFrom(const MsgObjConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgObjConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjConfig::CopyFrom(const MsgObjConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgObjConfig::Swap(MsgObjConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgObjConfig::InternalSwap(MsgObjConfig* other) {
  std::swap(type_, other->type_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgObjConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjConfig_descriptor_;
  metadata.reflection = MsgObjConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgObjConfig

// required .message.SubType type = 1 [default = DEFAULT];
 bool MsgObjConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgObjConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgObjConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgObjConfig::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::message::SubType MsgObjConfig::type() const {
  // @@protoc_insertion_point(field_get:message.MsgObjConfig.type)
  return static_cast< ::message::SubType >(type_);
}
 void MsgObjConfig::set_type(::message::SubType value) {
  assert(::message::SubType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:message.MsgObjConfig.type)
}

// required int32 id = 2;
 bool MsgObjConfig::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgObjConfig::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgObjConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgObjConfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 MsgObjConfig::id() const {
  // @@protoc_insertion_point(field_get:message.MsgObjConfig.id)
  return id_;
}
 void MsgObjConfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgObjConfig.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgDropBoxConfig::kObjFieldNumber;
const int MsgDropBoxConfig::kBaseGoldFieldNumber;
const int MsgDropBoxConfig::kRandomGoldFieldNumber;
#endif  // !_MSC_VER

MsgDropBoxConfig::MsgDropBoxConfig()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgDropBoxConfig)
}

void MsgDropBoxConfig::InitAsDefaultInstance() {
  obj_ = const_cast< ::message::MsgObjConfig*>(&::message::MsgObjConfig::default_instance());
}

MsgDropBoxConfig::MsgDropBoxConfig(const MsgDropBoxConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgDropBoxConfig)
}

void MsgDropBoxConfig::SharedCtor() {
  _cached_size_ = 0;
  obj_ = NULL;
  base_gold_ = 0;
  random_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDropBoxConfig::~MsgDropBoxConfig() {
  // @@protoc_insertion_point(destructor:message.MsgDropBoxConfig)
  SharedDtor();
}

void MsgDropBoxConfig::SharedDtor() {
  if (this != default_instance_) {
    delete obj_;
  }
}

void MsgDropBoxConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDropBoxConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDropBoxConfig_descriptor_;
}

const MsgDropBoxConfig& MsgDropBoxConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgDropBoxConfig* MsgDropBoxConfig::default_instance_ = NULL;

MsgDropBoxConfig* MsgDropBoxConfig::New(::google::protobuf::Arena* arena) const {
  MsgDropBoxConfig* n = new MsgDropBoxConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgDropBoxConfig::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgDropBoxConfig*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(base_gold_, random_gold_);
    if (has_obj()) {
      if (obj_ != NULL) obj_->::message::MsgObjConfig::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgDropBoxConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgDropBoxConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.MsgObjConfig obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_obj()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_base_gold;
        break;
      }

      // required int32 base_gold = 2;
      case 2: {
        if (tag == 16) {
         parse_base_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &base_gold_)));
          set_has_base_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_random_gold;
        break;
      }

      // required int32 random_gold = 3;
      case 3: {
        if (tag == 24) {
         parse_random_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &random_gold_)));
          set_has_random_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgDropBoxConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgDropBoxConfig)
  return false;
#undef DO_
}

void MsgDropBoxConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgDropBoxConfig)
  // required .message.MsgObjConfig obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->obj_, output);
  }

  // required int32 base_gold = 2;
  if (has_base_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->base_gold(), output);
  }

  // required int32 random_gold = 3;
  if (has_random_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->random_gold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgDropBoxConfig)
}

::google::protobuf::uint8* MsgDropBoxConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgDropBoxConfig)
  // required .message.MsgObjConfig obj = 1;
  if (has_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->obj_, target);
  }

  // required int32 base_gold = 2;
  if (has_base_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->base_gold(), target);
  }

  // required int32 random_gold = 3;
  if (has_random_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->random_gold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgDropBoxConfig)
  return target;
}

int MsgDropBoxConfig::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_obj()) {
    // required .message.MsgObjConfig obj = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->obj_);
  }

  if (has_base_gold()) {
    // required int32 base_gold = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->base_gold());
  }

  if (has_random_gold()) {
    // required int32 random_gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->random_gold());
  }

  return total_size;
}
int MsgDropBoxConfig::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .message.MsgObjConfig obj = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->obj_);

    // required int32 base_gold = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->base_gold());

    // required int32 random_gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->random_gold());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDropBoxConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgDropBoxConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDropBoxConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDropBoxConfig::MergeFrom(const MsgDropBoxConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      mutable_obj()->::message::MsgObjConfig::MergeFrom(from.obj());
    }
    if (from.has_base_gold()) {
      set_base_gold(from.base_gold());
    }
    if (from.has_random_gold()) {
      set_random_gold(from.random_gold());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgDropBoxConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDropBoxConfig::CopyFrom(const MsgDropBoxConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDropBoxConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_obj()) {
    if (!this->obj_->IsInitialized()) return false;
  }
  return true;
}

void MsgDropBoxConfig::Swap(MsgDropBoxConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgDropBoxConfig::InternalSwap(MsgDropBoxConfig* other) {
  std::swap(obj_, other->obj_);
  std::swap(base_gold_, other->base_gold_);
  std::swap(random_gold_, other->random_gold_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgDropBoxConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDropBoxConfig_descriptor_;
  metadata.reflection = MsgDropBoxConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgDropBoxConfig

// required .message.MsgObjConfig obj = 1;
 bool MsgDropBoxConfig::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgDropBoxConfig::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgDropBoxConfig::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgDropBoxConfig::clear_obj() {
  if (obj_ != NULL) obj_->::message::MsgObjConfig::Clear();
  clear_has_obj();
}
 const ::message::MsgObjConfig& MsgDropBoxConfig::obj() const {
  // @@protoc_insertion_point(field_get:message.MsgDropBoxConfig.obj)
  return obj_ != NULL ? *obj_ : *default_instance_->obj_;
}
 ::message::MsgObjConfig* MsgDropBoxConfig::mutable_obj() {
  set_has_obj();
  if (obj_ == NULL) {
    obj_ = new ::message::MsgObjConfig;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgDropBoxConfig.obj)
  return obj_;
}
 ::message::MsgObjConfig* MsgDropBoxConfig::release_obj() {
  clear_has_obj();
  ::message::MsgObjConfig* temp = obj_;
  obj_ = NULL;
  return temp;
}
 void MsgDropBoxConfig::set_allocated_obj(::message::MsgObjConfig* obj) {
  delete obj_;
  obj_ = obj;
  if (obj) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgDropBoxConfig.obj)
}

// required int32 base_gold = 2;
 bool MsgDropBoxConfig::has_base_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgDropBoxConfig::set_has_base_gold() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgDropBoxConfig::clear_has_base_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgDropBoxConfig::clear_base_gold() {
  base_gold_ = 0;
  clear_has_base_gold();
}
 ::google::protobuf::int32 MsgDropBoxConfig::base_gold() const {
  // @@protoc_insertion_point(field_get:message.MsgDropBoxConfig.base_gold)
  return base_gold_;
}
 void MsgDropBoxConfig::set_base_gold(::google::protobuf::int32 value) {
  set_has_base_gold();
  base_gold_ = value;
  // @@protoc_insertion_point(field_set:message.MsgDropBoxConfig.base_gold)
}

// required int32 random_gold = 3;
 bool MsgDropBoxConfig::has_random_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgDropBoxConfig::set_has_random_gold() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgDropBoxConfig::clear_has_random_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgDropBoxConfig::clear_random_gold() {
  random_gold_ = 0;
  clear_has_random_gold();
}
 ::google::protobuf::int32 MsgDropBoxConfig::random_gold() const {
  // @@protoc_insertion_point(field_get:message.MsgDropBoxConfig.random_gold)
  return random_gold_;
}
 void MsgDropBoxConfig::set_random_gold(::google::protobuf::int32 value) {
  set_has_random_gold();
  random_gold_ = value;
  // @@protoc_insertion_point(field_set:message.MsgDropBoxConfig.random_gold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgIntPair::kNumber1FieldNumber;
const int MsgIntPair::kNumber2FieldNumber;
#endif  // !_MSC_VER

MsgIntPair::MsgIntPair()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgIntPair)
}

void MsgIntPair::InitAsDefaultInstance() {
}

MsgIntPair::MsgIntPair(const MsgIntPair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgIntPair)
}

void MsgIntPair::SharedCtor() {
  _cached_size_ = 0;
  number_1_ = 0;
  number_2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntPair::~MsgIntPair() {
  // @@protoc_insertion_point(destructor:message.MsgIntPair)
  SharedDtor();
}

void MsgIntPair::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgIntPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgIntPair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntPair_descriptor_;
}

const MsgIntPair& MsgIntPair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgIntPair* MsgIntPair::default_instance_ = NULL;

MsgIntPair* MsgIntPair::New(::google::protobuf::Arena* arena) const {
  MsgIntPair* n = new MsgIntPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgIntPair::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgIntPair*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(number_1_, number_2_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgIntPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgIntPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 number_1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_1_)));
          set_has_number_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_number_2;
        break;
      }

      // required int32 number_2 = 2;
      case 2: {
        if (tag == 16) {
         parse_number_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_2_)));
          set_has_number_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgIntPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgIntPair)
  return false;
#undef DO_
}

void MsgIntPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgIntPair)
  // required int32 number_1 = 1;
  if (has_number_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number_1(), output);
  }

  // required int32 number_2 = 2;
  if (has_number_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number_2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgIntPair)
}

::google::protobuf::uint8* MsgIntPair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgIntPair)
  // required int32 number_1 = 1;
  if (has_number_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number_1(), target);
  }

  // required int32 number_2 = 2;
  if (has_number_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number_2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgIntPair)
  return target;
}

int MsgIntPair::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_number_1()) {
    // required int32 number_1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_1());
  }

  if (has_number_2()) {
    // required int32 number_2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_2());
  }

  return total_size;
}
int MsgIntPair::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 number_1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_1());

    // required int32 number_2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgIntPair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgIntPair* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntPair*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntPair::MergeFrom(const MsgIntPair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_number_1()) {
      set_number_1(from.number_1());
    }
    if (from.has_number_2()) {
      set_number_2(from.number_2());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgIntPair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntPair::CopyFrom(const MsgIntPair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntPair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgIntPair::Swap(MsgIntPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgIntPair::InternalSwap(MsgIntPair* other) {
  std::swap(number_1_, other->number_1_);
  std::swap(number_2_, other->number_2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgIntPair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntPair_descriptor_;
  metadata.reflection = MsgIntPair_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgIntPair

// required int32 number_1 = 1;
 bool MsgIntPair::has_number_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgIntPair::set_has_number_1() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgIntPair::clear_has_number_1() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgIntPair::clear_number_1() {
  number_1_ = 0;
  clear_has_number_1();
}
 ::google::protobuf::int32 MsgIntPair::number_1() const {
  // @@protoc_insertion_point(field_get:message.MsgIntPair.number_1)
  return number_1_;
}
 void MsgIntPair::set_number_1(::google::protobuf::int32 value) {
  set_has_number_1();
  number_1_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntPair.number_1)
}

// required int32 number_2 = 2;
 bool MsgIntPair::has_number_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgIntPair::set_has_number_2() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgIntPair::clear_has_number_2() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgIntPair::clear_number_2() {
  number_2_ = 0;
  clear_has_number_2();
}
 ::google::protobuf::int32 MsgIntPair::number_2() const {
  // @@protoc_insertion_point(field_get:message.MsgIntPair.number_2)
  return number_2_;
}
 void MsgIntPair::set_number_2(::google::protobuf::int32 value) {
  set_has_number_2();
  number_2_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntPair.number_2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgHeroData::kNameFieldNumber;
const int MsgHeroData::kGoldFieldNumber;
const int MsgHeroData::kRecordsFieldNumber;
const int MsgHeroData::kHeroesFieldNumber;
const int MsgHeroData::kTasksFieldNumber;
const int MsgHeroData::kCurrentHeroFieldNumber;
const int MsgHeroData::kCompleteTaskCountFieldNumber;
#endif  // !_MSC_VER

MsgHeroData::MsgHeroData()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgHeroData)
}

void MsgHeroData::InitAsDefaultInstance() {
}

MsgHeroData::MsgHeroData(const MsgHeroData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgHeroData)
}

void MsgHeroData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gold_ = 0;
  current_hero_ = 0;
  complete_task_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHeroData::~MsgHeroData() {
  // @@protoc_insertion_point(destructor:message.MsgHeroData)
  SharedDtor();
}

void MsgHeroData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgHeroData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHeroData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHeroData_descriptor_;
}

const MsgHeroData& MsgHeroData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgHeroData* MsgHeroData::default_instance_ = NULL;

MsgHeroData* MsgHeroData::New(::google::protobuf::Arena* arena) const {
  MsgHeroData* n = new MsgHeroData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgHeroData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgHeroData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 99) {
    ZR_(gold_, current_hero_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    complete_task_count_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  records_.Clear();
  heroes_.Clear();
  tasks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgHeroData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgHeroData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgHeroData.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gold;
        break;
      }

      // required int32 gold = 2;
      case 2: {
        if (tag == 16) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_records;
        break;
      }

      // repeated .message.MsgIntPair records = 3;
      case 3: {
        if (tag == 26) {
         parse_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_records;
        if (input->ExpectTag(32)) goto parse_heroes;
        break;
      }

      // repeated bool heroes = 4;
      case 4: {
        if (tag == 32) {
         parse_heroes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 32, input, this->mutable_heroes())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_heroes())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_heroes;
        if (input->ExpectTag(42)) goto parse_tasks;
        break;
      }

      // repeated .message.MsgTaskInfo tasks = 5;
      case 5: {
        if (tag == 42) {
         parse_tasks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tasks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_tasks;
        if (input->ExpectTag(48)) goto parse_current_hero;
        break;
      }

      // required int32 current_hero = 6;
      case 6: {
        if (tag == 48) {
         parse_current_hero:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_hero_)));
          set_has_current_hero();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_complete_task_count;
        break;
      }

      // required int32 complete_task_count = 7;
      case 7: {
        if (tag == 56) {
         parse_complete_task_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &complete_task_count_)));
          set_has_complete_task_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgHeroData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgHeroData)
  return false;
#undef DO_
}

void MsgHeroData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgHeroData)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgHeroData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 gold = 2;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gold(), output);
  }

  // repeated .message.MsgIntPair records = 3;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->records(i), output);
  }

  // repeated bool heroes = 4;
  for (int i = 0; i < this->heroes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      4, this->heroes(i), output);
  }

  // repeated .message.MsgTaskInfo tasks = 5;
  for (unsigned int i = 0, n = this->tasks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->tasks(i), output);
  }

  // required int32 current_hero = 6;
  if (has_current_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->current_hero(), output);
  }

  // required int32 complete_task_count = 7;
  if (has_complete_task_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->complete_task_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgHeroData)
}

::google::protobuf::uint8* MsgHeroData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgHeroData)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgHeroData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 gold = 2;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gold(), target);
  }

  // repeated .message.MsgIntPair records = 3;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->records(i), target);
  }

  // repeated bool heroes = 4;
  for (int i = 0; i < this->heroes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(4, this->heroes(i), target);
  }

  // repeated .message.MsgTaskInfo tasks = 5;
  for (unsigned int i = 0, n = this->tasks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->tasks(i), target);
  }

  // required int32 current_hero = 6;
  if (has_current_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->current_hero(), target);
  }

  // required int32 complete_task_count = 7;
  if (has_complete_task_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->complete_task_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgHeroData)
  return target;
}

int MsgHeroData::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_gold()) {
    // required int32 gold = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  if (has_current_hero()) {
    // required int32 current_hero = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_hero());
  }

  if (has_complete_task_count()) {
    // required int32 complete_task_count = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->complete_task_count());
  }

  return total_size;
}
int MsgHeroData::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000063) ^ 0x00000063) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 gold = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());

    // required int32 current_hero = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_hero());

    // required int32 complete_task_count = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->complete_task_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.MsgIntPair records = 3;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }

  // repeated bool heroes = 4;
  {
    int data_size = 0;
    data_size = 1 * this->heroes_size();
    total_size += 1 * this->heroes_size() + data_size;
  }

  // repeated .message.MsgTaskInfo tasks = 5;
  total_size += 1 * this->tasks_size();
  for (int i = 0; i < this->tasks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tasks(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHeroData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgHeroData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHeroData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHeroData::MergeFrom(const MsgHeroData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  records_.MergeFrom(from.records_);
  heroes_.MergeFrom(from.heroes_);
  tasks_.MergeFrom(from.tasks_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_current_hero()) {
      set_current_hero(from.current_hero());
    }
    if (from.has_complete_task_count()) {
      set_complete_task_count(from.complete_task_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgHeroData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHeroData::CopyFrom(const MsgHeroData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHeroData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000063) != 0x00000063) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->records())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tasks())) return false;
  return true;
}

void MsgHeroData::Swap(MsgHeroData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHeroData::InternalSwap(MsgHeroData* other) {
  name_.Swap(&other->name_);
  std::swap(gold_, other->gold_);
  records_.UnsafeArenaSwap(&other->records_);
  heroes_.UnsafeArenaSwap(&other->heroes_);
  tasks_.UnsafeArenaSwap(&other->tasks_);
  std::swap(current_hero_, other->current_hero_);
  std::swap(complete_task_count_, other->complete_task_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgHeroData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHeroData_descriptor_;
  metadata.reflection = MsgHeroData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgHeroData

// required string name = 1;
 bool MsgHeroData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgHeroData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgHeroData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgHeroData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& MsgHeroData::name() const {
  // @@protoc_insertion_point(field_get:message.MsgHeroData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgHeroData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgHeroData.name)
}
 void MsgHeroData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgHeroData.name)
}
 void MsgHeroData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgHeroData.name)
}
 ::std::string* MsgHeroData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.MsgHeroData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgHeroData::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgHeroData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgHeroData.name)
}

// required int32 gold = 2;
 bool MsgHeroData::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgHeroData::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgHeroData::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgHeroData::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
 ::google::protobuf::int32 MsgHeroData::gold() const {
  // @@protoc_insertion_point(field_get:message.MsgHeroData.gold)
  return gold_;
}
 void MsgHeroData::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:message.MsgHeroData.gold)
}

// repeated .message.MsgIntPair records = 3;
 int MsgHeroData::records_size() const {
  return records_.size();
}
 void MsgHeroData::clear_records() {
  records_.Clear();
}
 const ::message::MsgIntPair& MsgHeroData::records(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgHeroData.records)
  return records_.Get(index);
}
 ::message::MsgIntPair* MsgHeroData::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgHeroData.records)
  return records_.Mutable(index);
}
 ::message::MsgIntPair* MsgHeroData::add_records() {
  // @@protoc_insertion_point(field_add:message.MsgHeroData.records)
  return records_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >&
MsgHeroData::records() const {
  // @@protoc_insertion_point(field_list:message.MsgHeroData.records)
  return records_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >*
MsgHeroData::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgHeroData.records)
  return &records_;
}

// repeated bool heroes = 4;
 int MsgHeroData::heroes_size() const {
  return heroes_.size();
}
 void MsgHeroData::clear_heroes() {
  heroes_.Clear();
}
 bool MsgHeroData::heroes(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgHeroData.heroes)
  return heroes_.Get(index);
}
 void MsgHeroData::set_heroes(int index, bool value) {
  heroes_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.MsgHeroData.heroes)
}
 void MsgHeroData::add_heroes(bool value) {
  heroes_.Add(value);
  // @@protoc_insertion_point(field_add:message.MsgHeroData.heroes)
}
 const ::google::protobuf::RepeatedField< bool >&
MsgHeroData::heroes() const {
  // @@protoc_insertion_point(field_list:message.MsgHeroData.heroes)
  return heroes_;
}
 ::google::protobuf::RepeatedField< bool >*
MsgHeroData::mutable_heroes() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgHeroData.heroes)
  return &heroes_;
}

// repeated .message.MsgTaskInfo tasks = 5;
 int MsgHeroData::tasks_size() const {
  return tasks_.size();
}
 void MsgHeroData::clear_tasks() {
  tasks_.Clear();
}
 const ::message::MsgTaskInfo& MsgHeroData::tasks(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgHeroData.tasks)
  return tasks_.Get(index);
}
 ::message::MsgTaskInfo* MsgHeroData::mutable_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgHeroData.tasks)
  return tasks_.Mutable(index);
}
 ::message::MsgTaskInfo* MsgHeroData::add_tasks() {
  // @@protoc_insertion_point(field_add:message.MsgHeroData.tasks)
  return tasks_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgTaskInfo >&
MsgHeroData::tasks() const {
  // @@protoc_insertion_point(field_list:message.MsgHeroData.tasks)
  return tasks_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgTaskInfo >*
MsgHeroData::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgHeroData.tasks)
  return &tasks_;
}

// required int32 current_hero = 6;
 bool MsgHeroData::has_current_hero() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void MsgHeroData::set_has_current_hero() {
  _has_bits_[0] |= 0x00000020u;
}
 void MsgHeroData::clear_has_current_hero() {
  _has_bits_[0] &= ~0x00000020u;
}
 void MsgHeroData::clear_current_hero() {
  current_hero_ = 0;
  clear_has_current_hero();
}
 ::google::protobuf::int32 MsgHeroData::current_hero() const {
  // @@protoc_insertion_point(field_get:message.MsgHeroData.current_hero)
  return current_hero_;
}
 void MsgHeroData::set_current_hero(::google::protobuf::int32 value) {
  set_has_current_hero();
  current_hero_ = value;
  // @@protoc_insertion_point(field_set:message.MsgHeroData.current_hero)
}

// required int32 complete_task_count = 7;
 bool MsgHeroData::has_complete_task_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void MsgHeroData::set_has_complete_task_count() {
  _has_bits_[0] |= 0x00000040u;
}
 void MsgHeroData::clear_has_complete_task_count() {
  _has_bits_[0] &= ~0x00000040u;
}
 void MsgHeroData::clear_complete_task_count() {
  complete_task_count_ = 0;
  clear_has_complete_task_count();
}
 ::google::protobuf::int32 MsgHeroData::complete_task_count() const {
  // @@protoc_insertion_point(field_get:message.MsgHeroData.complete_task_count)
  return complete_task_count_;
}
 void MsgHeroData::set_complete_task_count(::google::protobuf::int32 value) {
  set_has_complete_task_count();
  complete_task_count_ = value;
  // @@protoc_insertion_point(field_set:message.MsgHeroData.complete_task_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgTaskConditionInfo::kTaskTypeFieldNumber;
const int MsgTaskConditionInfo::kArgument1FieldNumber;
const int MsgTaskConditionInfo::kArgument2FieldNumber;
#endif  // !_MSC_VER

MsgTaskConditionInfo::MsgTaskConditionInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgTaskConditionInfo)
}

void MsgTaskConditionInfo::InitAsDefaultInstance() {
}

MsgTaskConditionInfo::MsgTaskConditionInfo(const MsgTaskConditionInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgTaskConditionInfo)
}

void MsgTaskConditionInfo::SharedCtor() {
  _cached_size_ = 0;
  tasktype_ = 0;
  argument_1_ = 0;
  argument_2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTaskConditionInfo::~MsgTaskConditionInfo() {
  // @@protoc_insertion_point(destructor:message.MsgTaskConditionInfo)
  SharedDtor();
}

void MsgTaskConditionInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgTaskConditionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTaskConditionInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTaskConditionInfo_descriptor_;
}

const MsgTaskConditionInfo& MsgTaskConditionInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgTaskConditionInfo* MsgTaskConditionInfo::default_instance_ = NULL;

MsgTaskConditionInfo* MsgTaskConditionInfo::New(::google::protobuf::Arena* arena) const {
  MsgTaskConditionInfo* n = new MsgTaskConditionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgTaskConditionInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgTaskConditionInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(tasktype_, argument_2_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgTaskConditionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgTaskConditionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.TaskType taskType = 1 [default = TaskType_NULL];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::TaskType_IsValid(value)) {
            set_tasktype(static_cast< ::message::TaskType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_argument_1;
        break;
      }

      // required int32 argument_1 = 2;
      case 2: {
        if (tag == 16) {
         parse_argument_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argument_1_)));
          set_has_argument_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_argument_2;
        break;
      }

      // required int32 argument_2 = 3;
      case 3: {
        if (tag == 24) {
         parse_argument_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argument_2_)));
          set_has_argument_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgTaskConditionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgTaskConditionInfo)
  return false;
#undef DO_
}

void MsgTaskConditionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgTaskConditionInfo)
  // required .message.TaskType taskType = 1 [default = TaskType_NULL];
  if (has_tasktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tasktype(), output);
  }

  // required int32 argument_1 = 2;
  if (has_argument_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->argument_1(), output);
  }

  // required int32 argument_2 = 3;
  if (has_argument_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->argument_2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgTaskConditionInfo)
}

::google::protobuf::uint8* MsgTaskConditionInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgTaskConditionInfo)
  // required .message.TaskType taskType = 1 [default = TaskType_NULL];
  if (has_tasktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tasktype(), target);
  }

  // required int32 argument_1 = 2;
  if (has_argument_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->argument_1(), target);
  }

  // required int32 argument_2 = 3;
  if (has_argument_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->argument_2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgTaskConditionInfo)
  return target;
}

int MsgTaskConditionInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_tasktype()) {
    // required .message.TaskType taskType = 1 [default = TaskType_NULL];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tasktype());
  }

  if (has_argument_1()) {
    // required int32 argument_1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argument_1());
  }

  if (has_argument_2()) {
    // required int32 argument_2 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argument_2());
  }

  return total_size;
}
int MsgTaskConditionInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .message.TaskType taskType = 1 [default = TaskType_NULL];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tasktype());

    // required int32 argument_1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argument_1());

    // required int32 argument_2 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argument_2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTaskConditionInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgTaskConditionInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTaskConditionInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTaskConditionInfo::MergeFrom(const MsgTaskConditionInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tasktype()) {
      set_tasktype(from.tasktype());
    }
    if (from.has_argument_1()) {
      set_argument_1(from.argument_1());
    }
    if (from.has_argument_2()) {
      set_argument_2(from.argument_2());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgTaskConditionInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTaskConditionInfo::CopyFrom(const MsgTaskConditionInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTaskConditionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MsgTaskConditionInfo::Swap(MsgTaskConditionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgTaskConditionInfo::InternalSwap(MsgTaskConditionInfo* other) {
  std::swap(tasktype_, other->tasktype_);
  std::swap(argument_1_, other->argument_1_);
  std::swap(argument_2_, other->argument_2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgTaskConditionInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTaskConditionInfo_descriptor_;
  metadata.reflection = MsgTaskConditionInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgTaskConditionInfo

// required .message.TaskType taskType = 1 [default = TaskType_NULL];
 bool MsgTaskConditionInfo::has_tasktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgTaskConditionInfo::set_has_tasktype() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgTaskConditionInfo::clear_has_tasktype() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgTaskConditionInfo::clear_tasktype() {
  tasktype_ = 0;
  clear_has_tasktype();
}
 ::message::TaskType MsgTaskConditionInfo::tasktype() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConditionInfo.taskType)
  return static_cast< ::message::TaskType >(tasktype_);
}
 void MsgTaskConditionInfo::set_tasktype(::message::TaskType value) {
  assert(::message::TaskType_IsValid(value));
  set_has_tasktype();
  tasktype_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskConditionInfo.taskType)
}

// required int32 argument_1 = 2;
 bool MsgTaskConditionInfo::has_argument_1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgTaskConditionInfo::set_has_argument_1() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgTaskConditionInfo::clear_has_argument_1() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgTaskConditionInfo::clear_argument_1() {
  argument_1_ = 0;
  clear_has_argument_1();
}
 ::google::protobuf::int32 MsgTaskConditionInfo::argument_1() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConditionInfo.argument_1)
  return argument_1_;
}
 void MsgTaskConditionInfo::set_argument_1(::google::protobuf::int32 value) {
  set_has_argument_1();
  argument_1_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskConditionInfo.argument_1)
}

// required int32 argument_2 = 3;
 bool MsgTaskConditionInfo::has_argument_2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgTaskConditionInfo::set_has_argument_2() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgTaskConditionInfo::clear_has_argument_2() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgTaskConditionInfo::clear_argument_2() {
  argument_2_ = 0;
  clear_has_argument_2();
}
 ::google::protobuf::int32 MsgTaskConditionInfo::argument_2() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConditionInfo.argument_2)
  return argument_2_;
}
 void MsgTaskConditionInfo::set_argument_2(::google::protobuf::int32 value) {
  set_has_argument_2();
  argument_2_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskConditionInfo.argument_2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgTaskConfigInfo::kTaskIDFieldNumber;
const int MsgTaskConfigInfo::kTaskConditionFieldNumber;
const int MsgTaskConfigInfo::kRequireTimeFieldNumber;
const int MsgTaskConfigInfo::kRequireUnlockChapterFieldNumber;
const int MsgTaskConfigInfo::kRequireUnlockSectionFieldNumber;
const int MsgTaskConfigInfo::kRequireUnlockCompleteTaskCountFieldNumber;
const int MsgTaskConfigInfo::kGiftGoldFieldNumber;
const int MsgTaskConfigInfo::kDescribeFieldNumber;
#endif  // !_MSC_VER

MsgTaskConfigInfo::MsgTaskConfigInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgTaskConfigInfo)
}

void MsgTaskConfigInfo::InitAsDefaultInstance() {
}

MsgTaskConfigInfo::MsgTaskConfigInfo(const MsgTaskConfigInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgTaskConfigInfo)
}

void MsgTaskConfigInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  taskid_ = 0;
  require_time_ = 0;
  require_unlock_chapter_ = 0;
  require_unlock_section_ = 0;
  require_unlock_complete_task_count_ = 0;
  gift_gold_ = 0;
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTaskConfigInfo::~MsgTaskConfigInfo() {
  // @@protoc_insertion_point(destructor:message.MsgTaskConfigInfo)
  SharedDtor();
}

void MsgTaskConfigInfo::SharedDtor() {
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgTaskConfigInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTaskConfigInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTaskConfigInfo_descriptor_;
}

const MsgTaskConfigInfo& MsgTaskConfigInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgTaskConfigInfo* MsgTaskConfigInfo::default_instance_ = NULL;

MsgTaskConfigInfo* MsgTaskConfigInfo::New(::google::protobuf::Arena* arena) const {
  MsgTaskConfigInfo* n = new MsgTaskConfigInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgTaskConfigInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgTaskConfigInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 253) {
    ZR_(taskid_, gift_gold_);
    if (has_describe()) {
      describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  task_condition_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgTaskConfigInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgTaskConfigInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 taskID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_task_condition;
        break;
      }

      // repeated .message.MsgTaskConditionInfo task_condition = 2;
      case 2: {
        if (tag == 18) {
         parse_task_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_task_condition;
        if (input->ExpectTag(24)) goto parse_require_time;
        break;
      }

      // required int32 require_time = 3;
      case 3: {
        if (tag == 24) {
         parse_require_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &require_time_)));
          set_has_require_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_require_unlock_chapter;
        break;
      }

      // required int32 require_unlock_chapter = 4;
      case 4: {
        if (tag == 32) {
         parse_require_unlock_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &require_unlock_chapter_)));
          set_has_require_unlock_chapter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_require_unlock_section;
        break;
      }

      // required int32 require_unlock_section = 5;
      case 5: {
        if (tag == 40) {
         parse_require_unlock_section:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &require_unlock_section_)));
          set_has_require_unlock_section();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_require_unlock_complete_task_count;
        break;
      }

      // required int32 require_unlock_complete_task_count = 6;
      case 6: {
        if (tag == 48) {
         parse_require_unlock_complete_task_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &require_unlock_complete_task_count_)));
          set_has_require_unlock_complete_task_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_gift_gold;
        break;
      }

      // required int32 gift_gold = 7;
      case 7: {
        if (tag == 56) {
         parse_gift_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gift_gold_)));
          set_has_gift_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_describe;
        break;
      }

      // required string describe = 8;
      case 8: {
        if (tag == 66) {
         parse_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->describe().data(), this->describe().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgTaskConfigInfo.describe");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgTaskConfigInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgTaskConfigInfo)
  return false;
#undef DO_
}

void MsgTaskConfigInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgTaskConfigInfo)
  // required int32 taskID = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->taskid(), output);
  }

  // repeated .message.MsgTaskConditionInfo task_condition = 2;
  for (unsigned int i = 0, n = this->task_condition_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->task_condition(i), output);
  }

  // required int32 require_time = 3;
  if (has_require_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->require_time(), output);
  }

  // required int32 require_unlock_chapter = 4;
  if (has_require_unlock_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->require_unlock_chapter(), output);
  }

  // required int32 require_unlock_section = 5;
  if (has_require_unlock_section()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->require_unlock_section(), output);
  }

  // required int32 require_unlock_complete_task_count = 6;
  if (has_require_unlock_complete_task_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->require_unlock_complete_task_count(), output);
  }

  // required int32 gift_gold = 7;
  if (has_gift_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gift_gold(), output);
  }

  // required string describe = 8;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgTaskConfigInfo.describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->describe(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgTaskConfigInfo)
}

::google::protobuf::uint8* MsgTaskConfigInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgTaskConfigInfo)
  // required int32 taskID = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->taskid(), target);
  }

  // repeated .message.MsgTaskConditionInfo task_condition = 2;
  for (unsigned int i = 0, n = this->task_condition_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->task_condition(i), target);
  }

  // required int32 require_time = 3;
  if (has_require_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->require_time(), target);
  }

  // required int32 require_unlock_chapter = 4;
  if (has_require_unlock_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->require_unlock_chapter(), target);
  }

  // required int32 require_unlock_section = 5;
  if (has_require_unlock_section()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->require_unlock_section(), target);
  }

  // required int32 require_unlock_complete_task_count = 6;
  if (has_require_unlock_complete_task_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->require_unlock_complete_task_count(), target);
  }

  // required int32 gift_gold = 7;
  if (has_gift_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gift_gold(), target);
  }

  // required string describe = 8;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgTaskConfigInfo.describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->describe(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgTaskConfigInfo)
  return target;
}

int MsgTaskConfigInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_taskid()) {
    // required int32 taskID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskid());
  }

  if (has_require_time()) {
    // required int32 require_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_time());
  }

  if (has_require_unlock_chapter()) {
    // required int32 require_unlock_chapter = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_unlock_chapter());
  }

  if (has_require_unlock_section()) {
    // required int32 require_unlock_section = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_unlock_section());
  }

  if (has_require_unlock_complete_task_count()) {
    // required int32 require_unlock_complete_task_count = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_unlock_complete_task_count());
  }

  if (has_gift_gold()) {
    // required int32 gift_gold = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gift_gold());
  }

  if (has_describe()) {
    // required string describe = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  return total_size;
}
int MsgTaskConfigInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x000000fd) ^ 0x000000fd) == 0) {  // All required fields are present.
    // required int32 taskID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskid());

    // required int32 require_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_time());

    // required int32 require_unlock_chapter = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_unlock_chapter());

    // required int32 require_unlock_section = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_unlock_section());

    // required int32 require_unlock_complete_task_count = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_unlock_complete_task_count());

    // required int32 gift_gold = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gift_gold());

    // required string describe = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.MsgTaskConditionInfo task_condition = 2;
  total_size += 1 * this->task_condition_size();
  for (int i = 0; i < this->task_condition_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task_condition(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTaskConfigInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgTaskConfigInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTaskConfigInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTaskConfigInfo::MergeFrom(const MsgTaskConfigInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  task_condition_.MergeFrom(from.task_condition_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_require_time()) {
      set_require_time(from.require_time());
    }
    if (from.has_require_unlock_chapter()) {
      set_require_unlock_chapter(from.require_unlock_chapter());
    }
    if (from.has_require_unlock_section()) {
      set_require_unlock_section(from.require_unlock_section());
    }
    if (from.has_require_unlock_complete_task_count()) {
      set_require_unlock_complete_task_count(from.require_unlock_complete_task_count());
    }
    if (from.has_gift_gold()) {
      set_gift_gold(from.gift_gold());
    }
    if (from.has_describe()) {
      set_has_describe();
      describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgTaskConfigInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTaskConfigInfo::CopyFrom(const MsgTaskConfigInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTaskConfigInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000fd) != 0x000000fd) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->task_condition())) return false;
  return true;
}

void MsgTaskConfigInfo::Swap(MsgTaskConfigInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgTaskConfigInfo::InternalSwap(MsgTaskConfigInfo* other) {
  std::swap(taskid_, other->taskid_);
  task_condition_.UnsafeArenaSwap(&other->task_condition_);
  std::swap(require_time_, other->require_time_);
  std::swap(require_unlock_chapter_, other->require_unlock_chapter_);
  std::swap(require_unlock_section_, other->require_unlock_section_);
  std::swap(require_unlock_complete_task_count_, other->require_unlock_complete_task_count_);
  std::swap(gift_gold_, other->gift_gold_);
  describe_.Swap(&other->describe_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgTaskConfigInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTaskConfigInfo_descriptor_;
  metadata.reflection = MsgTaskConfigInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgTaskConfigInfo

// required int32 taskID = 1;
 bool MsgTaskConfigInfo::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgTaskConfigInfo::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgTaskConfigInfo::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgTaskConfigInfo::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
 ::google::protobuf::int32 MsgTaskConfigInfo::taskid() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConfigInfo.taskID)
  return taskid_;
}
 void MsgTaskConfigInfo::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskConfigInfo.taskID)
}

// repeated .message.MsgTaskConditionInfo task_condition = 2;
 int MsgTaskConfigInfo::task_condition_size() const {
  return task_condition_.size();
}
 void MsgTaskConfigInfo::clear_task_condition() {
  task_condition_.Clear();
}
 const ::message::MsgTaskConditionInfo& MsgTaskConfigInfo::task_condition(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConfigInfo.task_condition)
  return task_condition_.Get(index);
}
 ::message::MsgTaskConditionInfo* MsgTaskConfigInfo::mutable_task_condition(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgTaskConfigInfo.task_condition)
  return task_condition_.Mutable(index);
}
 ::message::MsgTaskConditionInfo* MsgTaskConfigInfo::add_task_condition() {
  // @@protoc_insertion_point(field_add:message.MsgTaskConfigInfo.task_condition)
  return task_condition_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgTaskConditionInfo >&
MsgTaskConfigInfo::task_condition() const {
  // @@protoc_insertion_point(field_list:message.MsgTaskConfigInfo.task_condition)
  return task_condition_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgTaskConditionInfo >*
MsgTaskConfigInfo::mutable_task_condition() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgTaskConfigInfo.task_condition)
  return &task_condition_;
}

// required int32 require_time = 3;
 bool MsgTaskConfigInfo::has_require_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgTaskConfigInfo::set_has_require_time() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgTaskConfigInfo::clear_has_require_time() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgTaskConfigInfo::clear_require_time() {
  require_time_ = 0;
  clear_has_require_time();
}
 ::google::protobuf::int32 MsgTaskConfigInfo::require_time() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConfigInfo.require_time)
  return require_time_;
}
 void MsgTaskConfigInfo::set_require_time(::google::protobuf::int32 value) {
  set_has_require_time();
  require_time_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskConfigInfo.require_time)
}

// required int32 require_unlock_chapter = 4;
 bool MsgTaskConfigInfo::has_require_unlock_chapter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgTaskConfigInfo::set_has_require_unlock_chapter() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgTaskConfigInfo::clear_has_require_unlock_chapter() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgTaskConfigInfo::clear_require_unlock_chapter() {
  require_unlock_chapter_ = 0;
  clear_has_require_unlock_chapter();
}
 ::google::protobuf::int32 MsgTaskConfigInfo::require_unlock_chapter() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConfigInfo.require_unlock_chapter)
  return require_unlock_chapter_;
}
 void MsgTaskConfigInfo::set_require_unlock_chapter(::google::protobuf::int32 value) {
  set_has_require_unlock_chapter();
  require_unlock_chapter_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskConfigInfo.require_unlock_chapter)
}

// required int32 require_unlock_section = 5;
 bool MsgTaskConfigInfo::has_require_unlock_section() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void MsgTaskConfigInfo::set_has_require_unlock_section() {
  _has_bits_[0] |= 0x00000010u;
}
 void MsgTaskConfigInfo::clear_has_require_unlock_section() {
  _has_bits_[0] &= ~0x00000010u;
}
 void MsgTaskConfigInfo::clear_require_unlock_section() {
  require_unlock_section_ = 0;
  clear_has_require_unlock_section();
}
 ::google::protobuf::int32 MsgTaskConfigInfo::require_unlock_section() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConfigInfo.require_unlock_section)
  return require_unlock_section_;
}
 void MsgTaskConfigInfo::set_require_unlock_section(::google::protobuf::int32 value) {
  set_has_require_unlock_section();
  require_unlock_section_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskConfigInfo.require_unlock_section)
}

// required int32 require_unlock_complete_task_count = 6;
 bool MsgTaskConfigInfo::has_require_unlock_complete_task_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void MsgTaskConfigInfo::set_has_require_unlock_complete_task_count() {
  _has_bits_[0] |= 0x00000020u;
}
 void MsgTaskConfigInfo::clear_has_require_unlock_complete_task_count() {
  _has_bits_[0] &= ~0x00000020u;
}
 void MsgTaskConfigInfo::clear_require_unlock_complete_task_count() {
  require_unlock_complete_task_count_ = 0;
  clear_has_require_unlock_complete_task_count();
}
 ::google::protobuf::int32 MsgTaskConfigInfo::require_unlock_complete_task_count() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConfigInfo.require_unlock_complete_task_count)
  return require_unlock_complete_task_count_;
}
 void MsgTaskConfigInfo::set_require_unlock_complete_task_count(::google::protobuf::int32 value) {
  set_has_require_unlock_complete_task_count();
  require_unlock_complete_task_count_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskConfigInfo.require_unlock_complete_task_count)
}

// required int32 gift_gold = 7;
 bool MsgTaskConfigInfo::has_gift_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void MsgTaskConfigInfo::set_has_gift_gold() {
  _has_bits_[0] |= 0x00000040u;
}
 void MsgTaskConfigInfo::clear_has_gift_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
 void MsgTaskConfigInfo::clear_gift_gold() {
  gift_gold_ = 0;
  clear_has_gift_gold();
}
 ::google::protobuf::int32 MsgTaskConfigInfo::gift_gold() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConfigInfo.gift_gold)
  return gift_gold_;
}
 void MsgTaskConfigInfo::set_gift_gold(::google::protobuf::int32 value) {
  set_has_gift_gold();
  gift_gold_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskConfigInfo.gift_gold)
}

// required string describe = 8;
 bool MsgTaskConfigInfo::has_describe() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void MsgTaskConfigInfo::set_has_describe() {
  _has_bits_[0] |= 0x00000080u;
}
 void MsgTaskConfigInfo::clear_has_describe() {
  _has_bits_[0] &= ~0x00000080u;
}
 void MsgTaskConfigInfo::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
 const ::std::string& MsgTaskConfigInfo::describe() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskConfigInfo.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgTaskConfigInfo::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgTaskConfigInfo.describe)
}
 void MsgTaskConfigInfo::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgTaskConfigInfo.describe)
}
 void MsgTaskConfigInfo::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgTaskConfigInfo.describe)
}
 ::std::string* MsgTaskConfigInfo::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.MsgTaskConfigInfo.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgTaskConfigInfo::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgTaskConfigInfo::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.MsgTaskConfigInfo.describe)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgShopConfigInfo::kGridIdFieldNumber;
const int MsgShopConfigInfo::kHeroIdFieldNumber;
const int MsgShopConfigInfo::kRequireGoldFieldNumber;
const int MsgShopConfigInfo::kCheapeGoldFieldNumber;
#endif  // !_MSC_VER

MsgShopConfigInfo::MsgShopConfigInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgShopConfigInfo)
}

void MsgShopConfigInfo::InitAsDefaultInstance() {
}

MsgShopConfigInfo::MsgShopConfigInfo(const MsgShopConfigInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgShopConfigInfo)
}

void MsgShopConfigInfo::SharedCtor() {
  _cached_size_ = 0;
  grid_id_ = 0;
  hero_id_ = 0;
  require_gold_ = 0;
  cheape_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShopConfigInfo::~MsgShopConfigInfo() {
  // @@protoc_insertion_point(destructor:message.MsgShopConfigInfo)
  SharedDtor();
}

void MsgShopConfigInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgShopConfigInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgShopConfigInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShopConfigInfo_descriptor_;
}

const MsgShopConfigInfo& MsgShopConfigInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgShopConfigInfo* MsgShopConfigInfo::default_instance_ = NULL;

MsgShopConfigInfo* MsgShopConfigInfo::New(::google::protobuf::Arena* arena) const {
  MsgShopConfigInfo* n = new MsgShopConfigInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgShopConfigInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgShopConfigInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(grid_id_, cheape_gold_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgShopConfigInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgShopConfigInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 grid_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grid_id_)));
          set_has_grid_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hero_id;
        break;
      }

      // required int32 hero_id = 2;
      case 2: {
        if (tag == 16) {
         parse_hero_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hero_id_)));
          set_has_hero_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_require_gold;
        break;
      }

      // required int32 require_gold = 3;
      case 3: {
        if (tag == 24) {
         parse_require_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &require_gold_)));
          set_has_require_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_cheape_gold;
        break;
      }

      // required int32 cheape_gold = 4;
      case 4: {
        if (tag == 32) {
         parse_cheape_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cheape_gold_)));
          set_has_cheape_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgShopConfigInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgShopConfigInfo)
  return false;
#undef DO_
}

void MsgShopConfigInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgShopConfigInfo)
  // required int32 grid_id = 1;
  if (has_grid_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->grid_id(), output);
  }

  // required int32 hero_id = 2;
  if (has_hero_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hero_id(), output);
  }

  // required int32 require_gold = 3;
  if (has_require_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->require_gold(), output);
  }

  // required int32 cheape_gold = 4;
  if (has_cheape_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cheape_gold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgShopConfigInfo)
}

::google::protobuf::uint8* MsgShopConfigInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgShopConfigInfo)
  // required int32 grid_id = 1;
  if (has_grid_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->grid_id(), target);
  }

  // required int32 hero_id = 2;
  if (has_hero_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hero_id(), target);
  }

  // required int32 require_gold = 3;
  if (has_require_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->require_gold(), target);
  }

  // required int32 cheape_gold = 4;
  if (has_cheape_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cheape_gold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgShopConfigInfo)
  return target;
}

int MsgShopConfigInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_grid_id()) {
    // required int32 grid_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->grid_id());
  }

  if (has_hero_id()) {
    // required int32 hero_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hero_id());
  }

  if (has_require_gold()) {
    // required int32 require_gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_gold());
  }

  if (has_cheape_gold()) {
    // required int32 cheape_gold = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cheape_gold());
  }

  return total_size;
}
int MsgShopConfigInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 grid_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->grid_id());

    // required int32 hero_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hero_id());

    // required int32 require_gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_gold());

    // required int32 cheape_gold = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cheape_gold());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgShopConfigInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgShopConfigInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShopConfigInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShopConfigInfo::MergeFrom(const MsgShopConfigInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grid_id()) {
      set_grid_id(from.grid_id());
    }
    if (from.has_hero_id()) {
      set_hero_id(from.hero_id());
    }
    if (from.has_require_gold()) {
      set_require_gold(from.require_gold());
    }
    if (from.has_cheape_gold()) {
      set_cheape_gold(from.cheape_gold());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgShopConfigInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShopConfigInfo::CopyFrom(const MsgShopConfigInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShopConfigInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void MsgShopConfigInfo::Swap(MsgShopConfigInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgShopConfigInfo::InternalSwap(MsgShopConfigInfo* other) {
  std::swap(grid_id_, other->grid_id_);
  std::swap(hero_id_, other->hero_id_);
  std::swap(require_gold_, other->require_gold_);
  std::swap(cheape_gold_, other->cheape_gold_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgShopConfigInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShopConfigInfo_descriptor_;
  metadata.reflection = MsgShopConfigInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgShopConfigInfo

// required int32 grid_id = 1;
 bool MsgShopConfigInfo::has_grid_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgShopConfigInfo::set_has_grid_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgShopConfigInfo::clear_has_grid_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgShopConfigInfo::clear_grid_id() {
  grid_id_ = 0;
  clear_has_grid_id();
}
 ::google::protobuf::int32 MsgShopConfigInfo::grid_id() const {
  // @@protoc_insertion_point(field_get:message.MsgShopConfigInfo.grid_id)
  return grid_id_;
}
 void MsgShopConfigInfo::set_grid_id(::google::protobuf::int32 value) {
  set_has_grid_id();
  grid_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgShopConfigInfo.grid_id)
}

// required int32 hero_id = 2;
 bool MsgShopConfigInfo::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgShopConfigInfo::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgShopConfigInfo::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgShopConfigInfo::clear_hero_id() {
  hero_id_ = 0;
  clear_has_hero_id();
}
 ::google::protobuf::int32 MsgShopConfigInfo::hero_id() const {
  // @@protoc_insertion_point(field_get:message.MsgShopConfigInfo.hero_id)
  return hero_id_;
}
 void MsgShopConfigInfo::set_hero_id(::google::protobuf::int32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgShopConfigInfo.hero_id)
}

// required int32 require_gold = 3;
 bool MsgShopConfigInfo::has_require_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgShopConfigInfo::set_has_require_gold() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgShopConfigInfo::clear_has_require_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgShopConfigInfo::clear_require_gold() {
  require_gold_ = 0;
  clear_has_require_gold();
}
 ::google::protobuf::int32 MsgShopConfigInfo::require_gold() const {
  // @@protoc_insertion_point(field_get:message.MsgShopConfigInfo.require_gold)
  return require_gold_;
}
 void MsgShopConfigInfo::set_require_gold(::google::protobuf::int32 value) {
  set_has_require_gold();
  require_gold_ = value;
  // @@protoc_insertion_point(field_set:message.MsgShopConfigInfo.require_gold)
}

// required int32 cheape_gold = 4;
 bool MsgShopConfigInfo::has_cheape_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgShopConfigInfo::set_has_cheape_gold() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgShopConfigInfo::clear_has_cheape_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgShopConfigInfo::clear_cheape_gold() {
  cheape_gold_ = 0;
  clear_has_cheape_gold();
}
 ::google::protobuf::int32 MsgShopConfigInfo::cheape_gold() const {
  // @@protoc_insertion_point(field_get:message.MsgShopConfigInfo.cheape_gold)
  return cheape_gold_;
}
 void MsgShopConfigInfo::set_cheape_gold(::google::protobuf::int32 value) {
  set_has_cheape_gold();
  cheape_gold_ = value;
  // @@protoc_insertion_point(field_set:message.MsgShopConfigInfo.cheape_gold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgTaskInfo::kTaskIDFieldNumber;
const int MsgTaskInfo::kArgument1FieldNumber;
const int MsgTaskInfo::kUseTimeFieldNumber;
#endif  // !_MSC_VER

MsgTaskInfo::MsgTaskInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgTaskInfo)
}

void MsgTaskInfo::InitAsDefaultInstance() {
}

MsgTaskInfo::MsgTaskInfo(const MsgTaskInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgTaskInfo)
}

void MsgTaskInfo::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0;
  argument_1_ = 0;
  usetime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTaskInfo::~MsgTaskInfo() {
  // @@protoc_insertion_point(destructor:message.MsgTaskInfo)
  SharedDtor();
}

void MsgTaskInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTaskInfo_descriptor_;
}

const MsgTaskInfo& MsgTaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgTaskInfo* MsgTaskInfo::default_instance_ = NULL;

MsgTaskInfo* MsgTaskInfo::New(::google::protobuf::Arena* arena) const {
  MsgTaskInfo* n = new MsgTaskInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgTaskInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgTaskInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(taskid_, usetime_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 TaskID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_argument_1;
        break;
      }

      // required int32 argument_1 = 2;
      case 2: {
        if (tag == 16) {
         parse_argument_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argument_1_)));
          set_has_argument_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_useTime;
        break;
      }

      // required int32 useTime = 3;
      case 3: {
        if (tag == 24) {
         parse_useTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usetime_)));
          set_has_usetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgTaskInfo)
  return false;
#undef DO_
}

void MsgTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgTaskInfo)
  // required int32 TaskID = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->taskid(), output);
  }

  // required int32 argument_1 = 2;
  if (has_argument_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->argument_1(), output);
  }

  // required int32 useTime = 3;
  if (has_usetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->usetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgTaskInfo)
}

::google::protobuf::uint8* MsgTaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgTaskInfo)
  // required int32 TaskID = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->taskid(), target);
  }

  // required int32 argument_1 = 2;
  if (has_argument_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->argument_1(), target);
  }

  // required int32 useTime = 3;
  if (has_usetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->usetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgTaskInfo)
  return target;
}

int MsgTaskInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_taskid()) {
    // required int32 TaskID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskid());
  }

  if (has_argument_1()) {
    // required int32 argument_1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argument_1());
  }

  if (has_usetime()) {
    // required int32 useTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usetime());
  }

  return total_size;
}
int MsgTaskInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 TaskID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskid());

    // required int32 argument_1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argument_1());

    // required int32 useTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usetime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgTaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTaskInfo::MergeFrom(const MsgTaskInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_argument_1()) {
      set_argument_1(from.argument_1());
    }
    if (from.has_usetime()) {
      set_usetime(from.usetime());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTaskInfo::CopyFrom(const MsgTaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTaskInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MsgTaskInfo::Swap(MsgTaskInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgTaskInfo::InternalSwap(MsgTaskInfo* other) {
  std::swap(taskid_, other->taskid_);
  std::swap(argument_1_, other->argument_1_);
  std::swap(usetime_, other->usetime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgTaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTaskInfo_descriptor_;
  metadata.reflection = MsgTaskInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgTaskInfo

// required int32 TaskID = 1;
 bool MsgTaskInfo::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgTaskInfo::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgTaskInfo::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgTaskInfo::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
 ::google::protobuf::int32 MsgTaskInfo::taskid() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskInfo.TaskID)
  return taskid_;
}
 void MsgTaskInfo::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskInfo.TaskID)
}

// required int32 argument_1 = 2;
 bool MsgTaskInfo::has_argument_1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgTaskInfo::set_has_argument_1() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgTaskInfo::clear_has_argument_1() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgTaskInfo::clear_argument_1() {
  argument_1_ = 0;
  clear_has_argument_1();
}
 ::google::protobuf::int32 MsgTaskInfo::argument_1() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskInfo.argument_1)
  return argument_1_;
}
 void MsgTaskInfo::set_argument_1(::google::protobuf::int32 value) {
  set_has_argument_1();
  argument_1_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskInfo.argument_1)
}

// required int32 useTime = 3;
 bool MsgTaskInfo::has_usetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgTaskInfo::set_has_usetime() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgTaskInfo::clear_has_usetime() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgTaskInfo::clear_usetime() {
  usetime_ = 0;
  clear_has_usetime();
}
 ::google::protobuf::int32 MsgTaskInfo::usetime() const {
  // @@protoc_insertion_point(field_get:message.MsgTaskInfo.useTime)
  return usetime_;
}
 void MsgTaskInfo::set_usetime(::google::protobuf::int32 value) {
  set_has_usetime();
  usetime_ = value;
  // @@protoc_insertion_point(field_set:message.MsgTaskInfo.useTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgChapterConfigInfo::kChapterIdFieldNumber;
const int MsgChapterConfigInfo::kRequiredChapterIdFieldNumber;
const int MsgChapterConfigInfo::kRequiredSectionIdFieldNumber;
const int MsgChapterConfigInfo::kRequiredTaskCompleteCountFieldNumber;
const int MsgChapterConfigInfo::kRequireGoldFieldNumber;
const int MsgChapterConfigInfo::kMaxSectionCountFieldNumber;
#endif  // !_MSC_VER

MsgChapterConfigInfo::MsgChapterConfigInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgChapterConfigInfo)
}

void MsgChapterConfigInfo::InitAsDefaultInstance() {
}

MsgChapterConfigInfo::MsgChapterConfigInfo(const MsgChapterConfigInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgChapterConfigInfo)
}

void MsgChapterConfigInfo::SharedCtor() {
  _cached_size_ = 0;
  chapter_id_ = 0;
  required_chapter_id_ = 0;
  required_section_id_ = 0;
  required_task_complete_count_ = 0;
  require_gold_ = 0;
  max_section_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgChapterConfigInfo::~MsgChapterConfigInfo() {
  // @@protoc_insertion_point(destructor:message.MsgChapterConfigInfo)
  SharedDtor();
}

void MsgChapterConfigInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgChapterConfigInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgChapterConfigInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgChapterConfigInfo_descriptor_;
}

const MsgChapterConfigInfo& MsgChapterConfigInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgChapterConfigInfo* MsgChapterConfigInfo::default_instance_ = NULL;

MsgChapterConfigInfo* MsgChapterConfigInfo::New(::google::protobuf::Arena* arena) const {
  MsgChapterConfigInfo* n = new MsgChapterConfigInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgChapterConfigInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgChapterConfigInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(chapter_id_, max_section_count_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgChapterConfigInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgChapterConfigInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 chapter_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chapter_id_)));
          set_has_chapter_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_required_chapter_id;
        break;
      }

      // required int32 required_chapter_id = 2;
      case 2: {
        if (tag == 16) {
         parse_required_chapter_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_chapter_id_)));
          set_has_required_chapter_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_required_section_id;
        break;
      }

      // required int32 required_section_id = 3;
      case 3: {
        if (tag == 24) {
         parse_required_section_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_section_id_)));
          set_has_required_section_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_required_task_complete_count;
        break;
      }

      // required int32 required_task_complete_count = 4;
      case 4: {
        if (tag == 32) {
         parse_required_task_complete_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_task_complete_count_)));
          set_has_required_task_complete_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_require_gold;
        break;
      }

      // required int32 require_gold = 5;
      case 5: {
        if (tag == 40) {
         parse_require_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &require_gold_)));
          set_has_require_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_max_section_count;
        break;
      }

      // required int32 max_section_count = 6;
      case 6: {
        if (tag == 48) {
         parse_max_section_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_section_count_)));
          set_has_max_section_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgChapterConfigInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgChapterConfigInfo)
  return false;
#undef DO_
}

void MsgChapterConfigInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgChapterConfigInfo)
  // required int32 chapter_id = 1;
  if (has_chapter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chapter_id(), output);
  }

  // required int32 required_chapter_id = 2;
  if (has_required_chapter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->required_chapter_id(), output);
  }

  // required int32 required_section_id = 3;
  if (has_required_section_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->required_section_id(), output);
  }

  // required int32 required_task_complete_count = 4;
  if (has_required_task_complete_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->required_task_complete_count(), output);
  }

  // required int32 require_gold = 5;
  if (has_require_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->require_gold(), output);
  }

  // required int32 max_section_count = 6;
  if (has_max_section_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->max_section_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgChapterConfigInfo)
}

::google::protobuf::uint8* MsgChapterConfigInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgChapterConfigInfo)
  // required int32 chapter_id = 1;
  if (has_chapter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chapter_id(), target);
  }

  // required int32 required_chapter_id = 2;
  if (has_required_chapter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->required_chapter_id(), target);
  }

  // required int32 required_section_id = 3;
  if (has_required_section_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->required_section_id(), target);
  }

  // required int32 required_task_complete_count = 4;
  if (has_required_task_complete_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->required_task_complete_count(), target);
  }

  // required int32 require_gold = 5;
  if (has_require_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->require_gold(), target);
  }

  // required int32 max_section_count = 6;
  if (has_max_section_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->max_section_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgChapterConfigInfo)
  return target;
}

int MsgChapterConfigInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_chapter_id()) {
    // required int32 chapter_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chapter_id());
  }

  if (has_required_chapter_id()) {
    // required int32 required_chapter_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_chapter_id());
  }

  if (has_required_section_id()) {
    // required int32 required_section_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_section_id());
  }

  if (has_required_task_complete_count()) {
    // required int32 required_task_complete_count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_task_complete_count());
  }

  if (has_require_gold()) {
    // required int32 require_gold = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_gold());
  }

  if (has_max_section_count()) {
    // required int32 max_section_count = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_section_count());
  }

  return total_size;
}
int MsgChapterConfigInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required int32 chapter_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chapter_id());

    // required int32 required_chapter_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_chapter_id());

    // required int32 required_section_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_section_id());

    // required int32 required_task_complete_count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_task_complete_count());

    // required int32 require_gold = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->require_gold());

    // required int32 max_section_count = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_section_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgChapterConfigInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgChapterConfigInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgChapterConfigInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgChapterConfigInfo::MergeFrom(const MsgChapterConfigInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapter_id()) {
      set_chapter_id(from.chapter_id());
    }
    if (from.has_required_chapter_id()) {
      set_required_chapter_id(from.required_chapter_id());
    }
    if (from.has_required_section_id()) {
      set_required_section_id(from.required_section_id());
    }
    if (from.has_required_task_complete_count()) {
      set_required_task_complete_count(from.required_task_complete_count());
    }
    if (from.has_require_gold()) {
      set_require_gold(from.require_gold());
    }
    if (from.has_max_section_count()) {
      set_max_section_count(from.max_section_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgChapterConfigInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgChapterConfigInfo::CopyFrom(const MsgChapterConfigInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgChapterConfigInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void MsgChapterConfigInfo::Swap(MsgChapterConfigInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgChapterConfigInfo::InternalSwap(MsgChapterConfigInfo* other) {
  std::swap(chapter_id_, other->chapter_id_);
  std::swap(required_chapter_id_, other->required_chapter_id_);
  std::swap(required_section_id_, other->required_section_id_);
  std::swap(required_task_complete_count_, other->required_task_complete_count_);
  std::swap(require_gold_, other->require_gold_);
  std::swap(max_section_count_, other->max_section_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgChapterConfigInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgChapterConfigInfo_descriptor_;
  metadata.reflection = MsgChapterConfigInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgChapterConfigInfo

// required int32 chapter_id = 1;
 bool MsgChapterConfigInfo::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgChapterConfigInfo::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgChapterConfigInfo::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgChapterConfigInfo::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
 ::google::protobuf::int32 MsgChapterConfigInfo::chapter_id() const {
  // @@protoc_insertion_point(field_get:message.MsgChapterConfigInfo.chapter_id)
  return chapter_id_;
}
 void MsgChapterConfigInfo::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgChapterConfigInfo.chapter_id)
}

// required int32 required_chapter_id = 2;
 bool MsgChapterConfigInfo::has_required_chapter_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgChapterConfigInfo::set_has_required_chapter_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgChapterConfigInfo::clear_has_required_chapter_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgChapterConfigInfo::clear_required_chapter_id() {
  required_chapter_id_ = 0;
  clear_has_required_chapter_id();
}
 ::google::protobuf::int32 MsgChapterConfigInfo::required_chapter_id() const {
  // @@protoc_insertion_point(field_get:message.MsgChapterConfigInfo.required_chapter_id)
  return required_chapter_id_;
}
 void MsgChapterConfigInfo::set_required_chapter_id(::google::protobuf::int32 value) {
  set_has_required_chapter_id();
  required_chapter_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgChapterConfigInfo.required_chapter_id)
}

// required int32 required_section_id = 3;
 bool MsgChapterConfigInfo::has_required_section_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgChapterConfigInfo::set_has_required_section_id() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgChapterConfigInfo::clear_has_required_section_id() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgChapterConfigInfo::clear_required_section_id() {
  required_section_id_ = 0;
  clear_has_required_section_id();
}
 ::google::protobuf::int32 MsgChapterConfigInfo::required_section_id() const {
  // @@protoc_insertion_point(field_get:message.MsgChapterConfigInfo.required_section_id)
  return required_section_id_;
}
 void MsgChapterConfigInfo::set_required_section_id(::google::protobuf::int32 value) {
  set_has_required_section_id();
  required_section_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgChapterConfigInfo.required_section_id)
}

// required int32 required_task_complete_count = 4;
 bool MsgChapterConfigInfo::has_required_task_complete_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgChapterConfigInfo::set_has_required_task_complete_count() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgChapterConfigInfo::clear_has_required_task_complete_count() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgChapterConfigInfo::clear_required_task_complete_count() {
  required_task_complete_count_ = 0;
  clear_has_required_task_complete_count();
}
 ::google::protobuf::int32 MsgChapterConfigInfo::required_task_complete_count() const {
  // @@protoc_insertion_point(field_get:message.MsgChapterConfigInfo.required_task_complete_count)
  return required_task_complete_count_;
}
 void MsgChapterConfigInfo::set_required_task_complete_count(::google::protobuf::int32 value) {
  set_has_required_task_complete_count();
  required_task_complete_count_ = value;
  // @@protoc_insertion_point(field_set:message.MsgChapterConfigInfo.required_task_complete_count)
}

// required int32 require_gold = 5;
 bool MsgChapterConfigInfo::has_require_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void MsgChapterConfigInfo::set_has_require_gold() {
  _has_bits_[0] |= 0x00000010u;
}
 void MsgChapterConfigInfo::clear_has_require_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
 void MsgChapterConfigInfo::clear_require_gold() {
  require_gold_ = 0;
  clear_has_require_gold();
}
 ::google::protobuf::int32 MsgChapterConfigInfo::require_gold() const {
  // @@protoc_insertion_point(field_get:message.MsgChapterConfigInfo.require_gold)
  return require_gold_;
}
 void MsgChapterConfigInfo::set_require_gold(::google::protobuf::int32 value) {
  set_has_require_gold();
  require_gold_ = value;
  // @@protoc_insertion_point(field_set:message.MsgChapterConfigInfo.require_gold)
}

// required int32 max_section_count = 6;
 bool MsgChapterConfigInfo::has_max_section_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void MsgChapterConfigInfo::set_has_max_section_count() {
  _has_bits_[0] |= 0x00000020u;
}
 void MsgChapterConfigInfo::clear_has_max_section_count() {
  _has_bits_[0] &= ~0x00000020u;
}
 void MsgChapterConfigInfo::clear_max_section_count() {
  max_section_count_ = 0;
  clear_has_max_section_count();
}
 ::google::protobuf::int32 MsgChapterConfigInfo::max_section_count() const {
  // @@protoc_insertion_point(field_get:message.MsgChapterConfigInfo.max_section_count)
  return max_section_count_;
}
 void MsgChapterConfigInfo::set_max_section_count(::google::protobuf::int32 value) {
  set_has_max_section_count();
  max_section_count_ = value;
  // @@protoc_insertion_point(field_set:message.MsgChapterConfigInfo.max_section_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgGoldShopConfigInfo::kIdFieldNumber;
const int MsgGoldShopConfigInfo::kResourceIdFieldNumber;
const int MsgGoldShopConfigInfo::kGoldFieldNumber;
const int MsgGoldShopConfigInfo::kMoneyFieldNumber;
const int MsgGoldShopConfigInfo::kDescribeFieldNumber;
#endif  // !_MSC_VER

MsgGoldShopConfigInfo::MsgGoldShopConfigInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgGoldShopConfigInfo)
}

void MsgGoldShopConfigInfo::InitAsDefaultInstance() {
}

MsgGoldShopConfigInfo::MsgGoldShopConfigInfo(const MsgGoldShopConfigInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgGoldShopConfigInfo)
}

void MsgGoldShopConfigInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  resource_id_ = 0;
  gold_ = 0;
  money_ = 0;
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgGoldShopConfigInfo::~MsgGoldShopConfigInfo() {
  // @@protoc_insertion_point(destructor:message.MsgGoldShopConfigInfo)
  SharedDtor();
}

void MsgGoldShopConfigInfo::SharedDtor() {
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgGoldShopConfigInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGoldShopConfigInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgGoldShopConfigInfo_descriptor_;
}

const MsgGoldShopConfigInfo& MsgGoldShopConfigInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgGoldShopConfigInfo* MsgGoldShopConfigInfo::default_instance_ = NULL;

MsgGoldShopConfigInfo* MsgGoldShopConfigInfo::New(::google::protobuf::Arena* arena) const {
  MsgGoldShopConfigInfo* n = new MsgGoldShopConfigInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgGoldShopConfigInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgGoldShopConfigInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(id_, money_);
    if (has_describe()) {
      describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgGoldShopConfigInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgGoldShopConfigInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_resource_id;
        break;
      }

      // required int32 resource_id = 2;
      case 2: {
        if (tag == 16) {
         parse_resource_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resource_id_)));
          set_has_resource_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gold;
        break;
      }

      // required int32 gold = 3;
      case 3: {
        if (tag == 24) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_money;
        break;
      }

      // required float money = 4;
      case 4: {
        if (tag == 37) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_describe;
        break;
      }

      // required string describe = 5;
      case 5: {
        if (tag == 42) {
         parse_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->describe().data(), this->describe().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgGoldShopConfigInfo.describe");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgGoldShopConfigInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgGoldShopConfigInfo)
  return false;
#undef DO_
}

void MsgGoldShopConfigInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgGoldShopConfigInfo)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 resource_id = 2;
  if (has_resource_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->resource_id(), output);
  }

  // required int32 gold = 3;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gold(), output);
  }

  // required float money = 4;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->money(), output);
  }

  // required string describe = 5;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgGoldShopConfigInfo.describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->describe(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgGoldShopConfigInfo)
}

::google::protobuf::uint8* MsgGoldShopConfigInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgGoldShopConfigInfo)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 resource_id = 2;
  if (has_resource_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->resource_id(), target);
  }

  // required int32 gold = 3;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gold(), target);
  }

  // required float money = 4;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->money(), target);
  }

  // required string describe = 5;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgGoldShopConfigInfo.describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->describe(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgGoldShopConfigInfo)
  return target;
}

int MsgGoldShopConfigInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_resource_id()) {
    // required int32 resource_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resource_id());
  }

  if (has_gold()) {
    // required int32 gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  if (has_money()) {
    // required float money = 4;
    total_size += 1 + 4;
  }

  if (has_describe()) {
    // required string describe = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  return total_size;
}
int MsgGoldShopConfigInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 resource_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resource_id());

    // required int32 gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());

    // required float money = 4;
    total_size += 1 + 4;

    // required string describe = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGoldShopConfigInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgGoldShopConfigInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgGoldShopConfigInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgGoldShopConfigInfo::MergeFrom(const MsgGoldShopConfigInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_resource_id()) {
      set_resource_id(from.resource_id());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_describe()) {
      set_has_describe();
      describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgGoldShopConfigInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGoldShopConfigInfo::CopyFrom(const MsgGoldShopConfigInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGoldShopConfigInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void MsgGoldShopConfigInfo::Swap(MsgGoldShopConfigInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGoldShopConfigInfo::InternalSwap(MsgGoldShopConfigInfo* other) {
  std::swap(id_, other->id_);
  std::swap(resource_id_, other->resource_id_);
  std::swap(gold_, other->gold_);
  std::swap(money_, other->money_);
  describe_.Swap(&other->describe_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgGoldShopConfigInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgGoldShopConfigInfo_descriptor_;
  metadata.reflection = MsgGoldShopConfigInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgGoldShopConfigInfo

// required int32 id = 1;
 bool MsgGoldShopConfigInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgGoldShopConfigInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgGoldShopConfigInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgGoldShopConfigInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 MsgGoldShopConfigInfo::id() const {
  // @@protoc_insertion_point(field_get:message.MsgGoldShopConfigInfo.id)
  return id_;
}
 void MsgGoldShopConfigInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgGoldShopConfigInfo.id)
}

// required int32 resource_id = 2;
 bool MsgGoldShopConfigInfo::has_resource_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgGoldShopConfigInfo::set_has_resource_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgGoldShopConfigInfo::clear_has_resource_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgGoldShopConfigInfo::clear_resource_id() {
  resource_id_ = 0;
  clear_has_resource_id();
}
 ::google::protobuf::int32 MsgGoldShopConfigInfo::resource_id() const {
  // @@protoc_insertion_point(field_get:message.MsgGoldShopConfigInfo.resource_id)
  return resource_id_;
}
 void MsgGoldShopConfigInfo::set_resource_id(::google::protobuf::int32 value) {
  set_has_resource_id();
  resource_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgGoldShopConfigInfo.resource_id)
}

// required int32 gold = 3;
 bool MsgGoldShopConfigInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgGoldShopConfigInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgGoldShopConfigInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgGoldShopConfigInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
 ::google::protobuf::int32 MsgGoldShopConfigInfo::gold() const {
  // @@protoc_insertion_point(field_get:message.MsgGoldShopConfigInfo.gold)
  return gold_;
}
 void MsgGoldShopConfigInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:message.MsgGoldShopConfigInfo.gold)
}

// required float money = 4;
 bool MsgGoldShopConfigInfo::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgGoldShopConfigInfo::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgGoldShopConfigInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgGoldShopConfigInfo::clear_money() {
  money_ = 0;
  clear_has_money();
}
 float MsgGoldShopConfigInfo::money() const {
  // @@protoc_insertion_point(field_get:message.MsgGoldShopConfigInfo.money)
  return money_;
}
 void MsgGoldShopConfigInfo::set_money(float value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:message.MsgGoldShopConfigInfo.money)
}

// required string describe = 5;
 bool MsgGoldShopConfigInfo::has_describe() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void MsgGoldShopConfigInfo::set_has_describe() {
  _has_bits_[0] |= 0x00000010u;
}
 void MsgGoldShopConfigInfo::clear_has_describe() {
  _has_bits_[0] &= ~0x00000010u;
}
 void MsgGoldShopConfigInfo::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
 const ::std::string& MsgGoldShopConfigInfo::describe() const {
  // @@protoc_insertion_point(field_get:message.MsgGoldShopConfigInfo.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgGoldShopConfigInfo::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgGoldShopConfigInfo.describe)
}
 void MsgGoldShopConfigInfo::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgGoldShopConfigInfo.describe)
}
 void MsgGoldShopConfigInfo::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgGoldShopConfigInfo.describe)
}
 ::std::string* MsgGoldShopConfigInfo::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.MsgGoldShopConfigInfo.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgGoldShopConfigInfo::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgGoldShopConfigInfo::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.MsgGoldShopConfigInfo.describe)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
